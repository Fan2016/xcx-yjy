var app = getApp()

function DateFormat(format, date) {
  if (!date) {
    date = new Date();
  }
  var o = {
    "y+": date.getYear(), //year
    "M+": date.getMonth() + 1, //month
    "d+": date.getDate(), //day
    "h+": date.getHours(), //hour
    "H+": date.getHours(), //hour
    "m+": date.getMinutes(), //minute
    "s+": date.getSeconds(), //second
    "q+": Math.floor((date.getMonth() + 3) / 3), //quarter
    "S": date.getMilliseconds() //millisecond
  }
  if (/(y+)/.test(format))
    format = format.replace(RegExp.$1,
      (date.getFullYear() + "").substr(4 - RegExp.$1.length));
  for (var k in o)
    if (new RegExp("(" + k + ")").test(format))
      format = format.replace(RegExp.$1,
        RegExp.$1.length == 1 ? o[k] :
        ("00" + o[k]).substr(("" + o[k]).length));
  return format;

}

function ajax(option) {
  var data = option.data || {},
    api = {
      host: 'http://192.168.118.154:6006'
    },
    url;
  url = option.host ? option.host + option.url: api.host + option.url
  return new Promise((resolve, reject) => {
    wx.request({
      header: {
        Authorization: app.token_type + ' ' + app.access_token,
        Cookie: 'ASP.NET_SessionId=' + app.sessionid
      },
      url: url,
      data: data,
      success(res) {
        resolve(res)
      },
      fail(res) {
        reject(res)
      }
    })
  })
}

function treeUtil(data, key, parentKey, map) {
  this.data = data;
  this.key = key;
  this.parentKey = parentKey;
  this.treeParentKey = parentKey; //parentKey要转换成什么属性名称
  this.treeKey = key; //key要转换成什么属性名称
  this.map = map;
  if (map) {
    if (map[key]) this.treeKey = map[key];
  }
  this.toTree = function() {
    var data = this.data;
    var pos = {};
    var tree = [];
    var i = 0;
    while (data.length != 0) {
      if (data[i][this.parentKey] == 0) {
        var _temp = this.copy(data[i]);
        tree.push(_temp);
        pos[data[i][this.key]] = [tree.length - 1];
        data.splice(i, 1);
        i--;
      } else {
        var posArr = pos[data[i][this.parentKey]];
        if (posArr != undefined) {
          var obj = tree[posArr[0]];
          for (var j = 1; j < posArr.length; j++) {
            obj = obj.children[posArr[j]];
          }
          var _temp = this.copy(data[i]);
          obj.children.push(_temp);
          pos[data[i][this.key]] = posArr.concat([obj.children.length - 1]);
          data.splice(i, 1);
          i--;
        }
      }
      i++;
      if (i > data.length - 1) {
        i = 0;
      }
    }
    return tree;
  }
  this.copy = function(item) {
    var _temp = {
      children: []
    };
    _temp[this.treeKey] = item[this.key];
    for (var _index in item) {
      if (_index != this.key && _index != this.parentKey) {
        var _property = item[_index];
        if ((!!this.map) && this.map[_index])
          _temp[this.map[_index]] = _property;
        else
          _temp[_index] = _property;
      }
    }
    return _temp;
  }
}

function getDefalutResponse(response) {
  if (response.status === '200') {
    response.result = true
    response.json = response.data
  } else {
    response.result = false
  }
  return response
}

function showToast(obj) {
  var base = {
    title: '',
    image: '',
    duration: 1500,
    mask: true
  },param;
  
  param = Object.assign(base, obj||{})
  wx.showToast(param)
}
module.exports = {
  DateFormat,
  ajax,
  treeUtil,
  getDefalutResponse,
  showToast
}