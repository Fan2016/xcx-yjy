// pages/projectDetail/projectDetail.js
var commonJs = require('../../../utils/common'), ajax = commonJs.ajax, app = getApp(), 
  DateFormat = commonJs.DateFormat, initBase = commonJs.initBase, showToast = commonJs.showToast,TIMERID,k=0; 
Page({
  /**
   * 页面的初始数据
   */
  data: {
    id:'',
    bidName:'',
    bidState:'',
    viewType:'flow',
    unfold:'0',
    flowList: [],
    dayTen: "0",
    day: "0",
    hourTen: "0",
    hour: "0",
    minuteTen: "0",
    minute: "0",
    secondTen: "0",
    second: "0",
    OpeningTime:"",
    ServerTime:"",
    curToggle:true,
    isCollect:false,
    top:'',
    H:'100%'
  },
  timeChange(val){
    var str1,str2;
    str1 = val.split(" ");
    str2 = str1[0].split("-");
    return str2[0] + '年' + str2[1] + '月' + str2[2] + '日' + ' ' + str1[1]
  },
  cutViewType(e) {
    var val = e.target.dataset.type
    this.setData({
      viewType: val
    })
  },
  pointTo(e){
    this.setData({
      viewType: 'info',
      unfold: e.target.dataset.unfold,
      curToggle:true,
      top:0
    })
  },
  infoShow(e){
    var curToggle;
    if (this.data.unfold == e.target.dataset.unfold){
      curToggle = !this.data.curToggle
    }
    else{
      curToggle=true
    }
    this.setData({
      unfold: e.target.dataset.unfold,
      curToggle: curToggle,
      top:0
    })
  },
  showTime(OpeningTime, ServerTime){
    k++
    var _STime = new Date(ServerTime.substr(0, 10) + "T" + ServerTime.substr(11, 8)).getTime();
    var _OTime = new Date(OpeningTime.substr(0, 10) + "T" + OpeningTime.substr(11, 8)).getTime();
    var time_distance = _OTime - _STime - k * 1000, time_left;
    var int_day, int_hour, int_minute, int_second;
    if (time_distance > 0) {
      int_day = Math.floor(time_distance / 86400000);
      time_distance -= int_day * 86400000;
      int_hour = Math.floor(time_distance / 3600000);
      time_distance -= int_hour * 3600000;
      int_minute = Math.floor(time_distance / 60000);
      time_distance -= int_minute * 60000;
      int_second = Math.floor(time_distance / 1000);

      this.setData({
        dayTen:parseInt(int_day / 10),
        day:parseInt(int_day % 10),
        hourTen:parseInt(int_hour / 10),
        hour:parseInt(int_hour % 10),
        secondTen:parseInt(int_second / 10),
        second:parseInt(int_second % 10),
        minuteTen:parseInt(int_minute / 10),
        minute:parseInt(int_minute % 10)
      })
      var that = this;
      TIMERID = setTimeout(function () {
        that.showTime(that.data.OpeningTime, that.data.ServerTime)
      }, 1000);
    } else {
      this.setData({
        dayTen: 0,
        day: 0,
        hourTen: 0,
        hour: 0,
        secondTen:0,
        second: 0,
        minuteTen: 0,
        minute: 0
      })
      clearTimeout(TIMERID);
      this.setData({
        bidState:'已开标'
      })
    }
  },
  collect(){
    if (!app.access_token || !app.token_type){
         wx.showModal({
           title: '未登录 ！用户登录',
          content: '',
          success(res) {
            if (res.confirm) {
              wx.navigateTo({ url:'../../user/login/login'})
            } else if (res.cancel) {
            }
          }
        })
      return
    }
    var id=this.data.id
    if(this.data.isCollect){//取消关注
    
      ajax({
        url: '/Focus/CancelFocus', data: { SOURCE_ID: id  }
      }).then((res) => {
        if (res.data.status == 200) {
          this.setData({
            isCollect: false
          })
          showToast({ title: res.data.msg})          
        }else{
          showToast({ title: res.data.msg, image: '../../../images/warn.png' })
        }
      })
    }else{
      ajax({
        url: '/Focus/Focus', data: { SOURCE_ID: id  }
      }).then((res) => {
        if (res.data.status == 200) {
          this.setData({
            isCollect: true
          })
          showToast({ title: res.data.msg})         
        } else {
          showToast({ title: res.data.msg, image: '../../../images/warn.png' })
        }
      })
    }
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    var that=this; 
    this.setData({
      id: options.id ||''// '5a54006c286dca0ed4dc7828'
    }) 
    wx.getSystemInfo({
      success: function (res) {
        if (res.system.indexOf('iOS')>-1) { 
          that.setData({
            H: res.windowHeight*2 - 128 + "rpx"
          })
        }
      }
    })
    if (!app.sessionid) {
      initBase().then((res)=>{
        this.init()
      })
    }else{
      this.init()
    }  
  },
  init(){
    var id=this.data.id
    ajax({
      url: '/Search/GetData?method=Web.XCX_GetJiaoYiDetail', data: { SOURCE_ID: id  }
    }).then((res) => {
      var data = res.data.data.data[0];
      this.setData({
        bidName: data.NAME,
        bidState: data.STATUS_TXT,
        bidPublishTime: this.timeChange(data.PUBLISHED_TIME),
        OpeningTime: data.OPEN_TIME
      })
      ajax({
        url: '/Search/GetData?method=Web.XCX_GetDBTime'
      }).then((res) => {
        var serverTime = res.data.data.data[0].TM;
        this.setData({
          ServerTime: serverTime
        })
        var _STime = new Date(serverTime.substr(0, 10) + "T" + serverTime.substr(11, 8)).getTime();
        var _OTime = new Date(data.OPEN_TIME.substr(0, 10) + "T" + data.OPEN_TIME.substr(11, 8)).getTime();
        if (_OTime > _STime) {
          this.showTime(data.OPEN_TIME, serverTime)
        }
      })
    })
    ajax({
      url: '/Search/GetData?method=Web.XCX_GetTimeLine', data: { SOURCE_ID: id }
    }).then((res) => {
      var data = res.data.data.data, flowList = [];
      data.forEach((item) => {
        item.timeA = item.TM.split(" ")[0]
        item.timeB = item.TM.split(" ")[1]
        flowList.push(item)
      })

      this.setData({
        flowList: flowList
      })
    })
    ajax({
      url: '/Search/GetData?method=Vip.XCX_GetFocus', data: { SOURCE_ID: id }
    }).then((res) => {
      var isCollect = false;
      if (res.data.status == 200) {
        if (res.data.data.data.length) isCollect = true;
      } else {
        isCollect = false
      }
      this.setData({
        isCollect: isCollect
      })
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})