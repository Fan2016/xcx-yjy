var app = getApp(),
  commonJs = require('../../../utils/common'),
  ajax = commonJs.ajax,
  initBase = commonJs.initBase,
  DateFormat = commonJs.DateFormat
Page({
  /**
   * 页面的初始数据
   */
  data: {
    pageindex: 1,
    pageindexTotal: 0,
    total:0,
    NAME: "", //搜索
    isMessage: true, //要不要提示
    isLoad: false, //加载转圈圈要不要
    listMsg: '',
    bidList: [],
    isLogin: false, //是否登录
    pageUrl: '/pages/subscription/index/index',
    subSet:[],
    pushList:[],
    isCondition:false,
    sspConf:{
      region:[],
      category:[],
      price:''
    },
    tmList:[]
  },
  /**
   * 生命周期函数--监听页面加载
   */
  //订阅设置
  setConfig() {
    // this.setData({
    //   isConfig: true
    // })
    wx.navigateTo({
      url: './configPage/configPage'
    })

  },
  conditionEvent(){
    this.setData({
      isCondition: !this.data.isCondition
    })
  },
  cancelView(e){
    var i = e.detail.val, bidList = [...this.data.bidList]
    bidList[i].isView=false
    this.setData({
      bidList: bidList,
    })
  },
  //获取订阅设置
  getConfig(val) {
    var param = val.detail;
    var selParam = this.data.param; //原本的参数
    var newParam = {
      pageindex: 1,
      TYPE_ALL: '',
      AREA_CODE: '',
      CONTROL_PRICE_START: '',
      CONTROL_PRICE_END: '',
      OPEN_TIME_START: '',
      OPEN_TIME_END: '',
    };
    var curDate = new Date();
    if (param.time.value != "") {
      newParam.OPEN_TIME_START = DateFormat("yyyy-MM-dd");
      newParam.OPEN_TIME_END = DateFormat("yyyy-MM-dd", new Date(curDate.setDate(curDate.getDate() + Number(param.time.value))));
    }
    newParam.TYPE_ALL = param.category.value;
    newParam.CONTROL_PRICE_START = param.price.value.split(",")[0] || "";
    newParam.CONTROL_PRICE_END = param.price.value.split(",")[1] || "";
    newParam.AREA_CODE = param.region.value
    this.setData({
      isConfig: false,
      param: Object.assign(selParam, newParam)
    })
    this.getBidList(true);
  },
  //搜索框
  fetchSearch(e) {
    var val = e.detail.val;
    this.data.param.NAME = val || ""
    this.data.param.pageindex = 1
    if (this.data.isLogin) {
      this.getBidList(true);
    }
  },
  //获取订阅列表
  getBidList() {
    var start = (this.data.pageindex - 1) * 2, add = [...this.data.tmList].splice(start, 2), bidList=this.data.bidList;
    this.setData({
      bidList: [...bidList, ...add]
    })
  },
  getPushList() {
    this.setData({
      listMsg: '数据加载中...',
      isLoad: true,
      bidList: []
    })
    // wx.setStorageSync('pushList', [])//临时
    // wx.setStorageSync('viewPush', {})
    ajax({
      url: '/Search/GetData?method=Vip.PUSH_GetPushList',
    }).then((res) => {
      var res = commonJs.getDefalutResponse(res.data);
      if (res.result) {
        var data = [], initPush = wx.getStorageSync('pushList') || [], pushList = [], listMsg = '', isMessage = false, viewPush = wx.getStorageSync('viewPush');
        if (!viewPush){
          wx.setStorageSync('viewPush', {})
          viewPush={}
        }
        res.data.data.forEach(item=>{
          let obj = JSON.parse(item.MSG)
          obj.CREATE_TIME = item.CREATE_TIME.substr(0, 10)
          data.push(obj)
        })
        if (data.length) {
          pushList = [...data, ...initPush].splice(0,1000)//限存1000
          wx.setStorageSync('pushList', [...pushList])
        }else{
          pushList = [...initPush]
        }
        if (pushList.length<10){
          listMsg ='已加载所有订阅数据'
          isMessage=true
        }
        if (pushList.length ==0){
          listMsg = '暂无订阅数据'
          isMessage = true
        }
        pushList.forEach(item=>{
          item.isView = viewPush[item.ID] ? false : true
        })
        var tmList = [], tmStage={}
        pushList.forEach(item=>{
          if (!tmStage[item.CREATE_TIME]){
            tmStage[item.CREATE_TIME] = [item]
          }
          else{
            tmStage[item.CREATE_TIME].push(item)
          }
        })
        Object.keys(tmStage).forEach(item=>{
          tmList.push({ tm: item, data: tmStage[item]})
        })
        this.setData({
          pageindex:1,
          pushList: [...pushList],
          total: [...pushList].length,
          pageindexTotal: Math.ceil(tmList.length / 2),
          bidList: [...tmList].splice(0,2),
          isLoad:false,
          listMsg,
          isMessage,
          tmList
        })      
      }
    })
  },
  onLoad: function(options) {
    
    

  },
  getHasLogin() {
    var listMsg='',isLogin=false,isMessage=false;
    if (app.userName) {
      isLogin = true
      isMessage=true
      listMsg ='数据加载'
    }
    else{
      listMsg = '暂无订阅数据'
      isMessage = true   
    }
    this.setData({
      listMsg: listMsg,
      isMessage: isMessage,
      isLogin: isLogin
    })
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },
 
  init() {
    this.getHasLogin();
    if (!this.data.isLogin) {
      commonJs.unLoginToast();
    } else {
        ajax({
          url: '/Search/GetData?method=Vip.XCX_GetDinYue'
        }).then((data) => {
          var data = data.data
          let {
            status,
            msg
          } = data
          if (status === '200') {
            if (data && data.data && data.data.data && data.data.data[0]) {
              let config = JSON.parse(data.data.data[0].CONFIG), IS_REMOVE = data.data.data[0].IS_REMOVE
              this.setData({
                'sspConf.region': config.region.name == "" ? ["不限"] : config.region.name.split(","),
                'sspConf.category': config.category.name == "" ? ["不限"]  : config.category.name.split(","),
                'sspConf.price': config.price.name || "不限"
              })
              if (IS_REMOVE==1){
                wx.setStorageSync('pushList', [])
                ajax({
                  url: '/User/ResetSubscribeRemove'//清除订阅更新标识IS_REMOVE=0
                }).then((data)=>{
                })
              }
              this.getPushList()
            }
          }
        })    
    }
  },
  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function(e) {
    if (this.data.update){ //是否更新订阅
    }
    wx.setStorageSync('subNum', '')
    if (!app.sessionid) {
      initBase().then((res) => {
        this.init()
      })
    } else {
      this.init()
    }
    this.getHasLogin();
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {
    console.log('Down')
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {
    var pageindex = this.data.pageindex,
      pageindexTotal = this.data.pageindexTotal;
    if ((pageindex < pageindexTotal)) {
      this.data.pageindex = ++pageindex
    } else if (pageindex >= pageindexTotal) {
      this.setData({
        listMsg: '已加载所有订阅数据',
        isMessage:true
      })
      return
    }
    this.getBidList()
  },
  /**
   * 用户点击右上角分享
   */
  // onShareAppMessage: function() {

  // }
})